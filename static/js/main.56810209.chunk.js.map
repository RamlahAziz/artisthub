{"version":3,"sources":["components/ArtistDetails.js","components/ArtistEvents.js","components/EventResults.js","components/SearchResults.js","components/SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","margin","textAlign","padding","avatar","backgroundColor","red","ArtistDetails","props","console","log","results","classes","Card","className","CardHeader","Avatar","aria-label","src","image_url","title","name","subheader","facebook_page_url","media","height","paddingTop","table","borderBottom","text","fontFamily","fontSize","subtext","ArtistEvents","months","CardContent","Typography","variant","gutterBottom","Divider","Grid","container","direction","alignItems","item","xs","fontWeight","Box","event","venue","country","m","city","string","date","Date","getDate","getMonth","getFullYear","dateFormat","datetime","EventResults","artist","useState","eventResults","setEventResults","baseUrl","appId","artistName","a","Axios","get","headers","response","data","error","useEffect","getArtistEvents","al","style","alignContent","upcoming_event_count","map","record","SearchResults","searchResults","setSearchResults","showArtistResults","setShowArtistResults","selectedArtist","setSelectedArtist","React","loading","setLoading","searchValue","push","searchArtists","searchTerm","Skeleton","animation","length","onClick","e","preventDefault","handleClick","display","input","marginLeft","spacing","flex","iconButton","focused","borderColor","SearchBar","setSearchTerm","search","Paper","component","InputBase","placeholder","type","value","onChange","target","handleChange","onSubmit","inputProps","IconButton","App","path","children","Child","useParams","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.56810209.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {red} from \"@material-ui/core/colors\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 345,\n        margin: 10,\n        textAlign: \"left\",\n        padding: 10,\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\n//import DialogForm from \"./EMRMakerByDocForm\";\n//<DialogForm patientMy={props.record} doctorMy={props.doctor}/>\n\nexport default function ArtistDetails(props) {\n    console.log(\"Artist Details\", props.results);\n    const classes = useStyles();\n    return (\n\n        <Card className={classes.root}>\n            <CardHeader\n                avatar={\n                    <Avatar aria-label=\"picture\" className={classes.avatar} src={props.results.image_url}>\n                        {/*{props.results.name?'':props.results.name.charAt(0)}*/}\n                    </Avatar>\n                }\n                title={props.results.name}\n                subheader={props.results.facebook_page_url}\n            />\n        </Card>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { red } from \"@material-ui/core/colors\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid, TableCell, TableHead, TableRow } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Box from '@material-ui/core/Box';\n\nimport \"fontsource-roboto\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 300,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  table: {\n    borderBottom: \"none\",\n  },\n  text:{\n    fontFamily: \"Roboto\",\n    textAlign: \"left\",\n    fontSize: 15,\n  },\n  subtext: {\n    fontFamily: \"Roboto\",\n    textAlign: \"left\",\n    fontSize: 15,\n  },\n}));\n\nexport default function ArtistEvents(props) {\n  console.log('Artist Event Details: ',props);\n  const classes = useStyles();\n\n  const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ]\n\n  function dateFormat(string){\n    //2020-10-07T19:00:00\n    const date = new Date(string);\n    return date.getDate()+\" \" + months[date.getMonth()] +\", \" + date.getFullYear();\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.text} variant=\"overline\" gutterBottom>\n          EVENT DETAILS\n        </Typography>\n        <Divider variant=\"middle\" />\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n          <Grid container direction=\"row\">\n            <Grid item xs={6}>\n              <Typography fontWeight=\"fontWeightBold\" className={classes.text}>\n                <Box fontWeight=\"fontWeightBold\">\n                  Country\n                </Box>\n                <Box fontWeight=\"fontWeightLight\">{props.event.venue.country}</Box>\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography className={classes.text}>\n                <Box fontWeight=\"fontWeightBold\" m={0}>\n                  City\n                </Box>\n                <Box fontWeight=\"fontWeightLight\" m={0}>{props.event.venue.city}</Box>\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid></Grid>\n          <Grid container direction=\"row\">\n            <Grid item xs={6}>\n              <Typography className={classes.text}>\n                <Box fontWeight=\"fontWeightBold\" m={1}>Venue</Box>\n                <Box fontWeight=\"fontWeightLight\" m={0}>{props.event.venue.name}</Box>\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography className={classes.text}>\n                <Box fontWeight=\"fontWeightBold\" m={1}>Date</Box>\n                <Box fontWeight=\"fontWeightLight\" m={0}>{dateFormat(props.event.datetime)}</Box>\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {red} from \"@material-ui/core/colors\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Grid, TableCell, TableHead, TableRow} from \"@material-ui/core\";\nimport ArrowBackIosOutlinedIcon from '@material-ui/icons/ArrowBackIosOutlined';\nimport ArtistDetails from \"./ArtistDetails\";\nimport Axios from \"axios\";\nimport ArtistEvents from \"./ArtistEvents\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        margin: 10,\n        padding: 10,\n        fontFamily: \"Roboto\",\n        fontSize: 15,\n    },\n\n}));\n\nexport default function EventResults(props) {\n\n    const classes = useStyles();\n\n    console.log('Event Artist Name', props.artist.name);\n\n    const [eventResults, setEventResults] = useState([]);\n    //using a proxy to avoid cors errors\n    const baseUrl = `https://cors-anywhere.herokuapp.com/https://rest.bandsintown.com`;\n    const appId = \"b2d0af8ea8bfb7288d2701b2d06e9eae\";\n\n\n    useEffect(() => {\n        //data fetching whenever searchterm changes\n        getArtistEvents(props.artist.name);\n\n    }, [props.artist]);\n\n\n    async function getArtistEvents(artistName) {\n        try {\n            const response = await Axios.get(\n                `${baseUrl}/artists/${artistName}/events?app_id=${appId}&date=upcoming`,\n                {\n                    headers: {\n                        \"accept\": \"application/json\",\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\n                        \"X-Requested-With\": \"XMLHttpRequest\",\n                        \"Access-Control-Allow-Origin\": \"*\",\n                    },\n                }\n            );\n            const data = response.data;\n            console.log(\"Data returned from Events API: \", data);\n            // eventResults.push(data);\n            setEventResults(data)\n            console.log('Array of Search Results ', eventResults);\n\n            // return data;\n        } catch (error) {\n            // If an error occurred we log it to the console\n            console.error(\"Request Failed: \", error);\n        }\n    }\n\n    return (\n        <div>\n            <Grid container direction=\"column\" alignItems=\"flex-start\">\n\n                <Grid container direction=\"row\" alignItems=\"flex-start\" al>\n                    <Grid item xs={4}>\n                        <ArrowBackIosOutlinedIcon style={{ fontSize: 15 }}></ArrowBackIosOutlinedIcon>\n                        <Typography className={classes.text}>\n                            <Box fontWeight=\"fontWeightLight\">Back to results</Box>\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={2}>\n\n                    </Grid>\n                </Grid>\n\n\n                <Grid item xs={12} alignContent={\"flex-start\"}>\n                    <ArtistDetails results={props.artist}></ArtistDetails>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Typography className={classes.text}>\n                        {props.artist.upcoming_event_count} upcoming event(s)\n                    </Typography>\n                </Grid>\n\n            </Grid>\n\n            <Grid container direction=\"row\" alignItems=\"flex-start\">\n                {eventResults.map((record) => (\n                    <Grid item xs=\"4\">\n                        <ArtistEvents event={record}></ArtistEvents>\n                    </Grid>\n\n                ))}\n            </Grid>\n\n        </div>\n    );\n}\n\n","import React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {red} from \"@material-ui/core/colors\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Grid, TableCell, TableHead, TableRow} from \"@material-ui/core\";\nimport ArtistDetails from \"./ArtistDetails\";\nimport EventResults from \"./EventResults\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Axios from \"axios\";\nimport {Router} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        margin: 10,\n        textAlign: \"left\",\n        padding: 10,\n    },\n\n}));\n\nexport default function SearchResults(props) {\n\n    const classes = useStyles();\n\n    // console.log('searchterm',props);\n\n    let count = 0;\n    let temp = []\n    const [searchResults, setSearchResults] = useState([]);\n    const [showArtistResults, setShowArtistResults] = useState(true);\n    const [selectedArtist, setSelectedArtist] = useState(\"\");\n    const [loading, setLoading] = React.useState(true);\n    //using a proxy to avoid cors errors\n    const baseUrl = `https://cors-anywhere.herokuapp.com/https://rest.bandsintown.com`;\n    const appId = \"b2d0af8ea8bfb7288d2701b2d06e9eae\";\n\n\n    useEffect(() => {\n        //data fetching whenever searchterm changes\n        searchArtists(props.searchTerm);\n\n    }, [props.searchTerm]);\n\n    function handleClick(e, record) {\n        e.preventDefault();\n        console.log('onClick called', record);\n        setShowArtistResults(false);\n        setSelectedArtist(record);\n    };\n\n    async function searchArtists(searchValue) {\n        try {\n            const response = await Axios.get(\n                `${baseUrl}/artists/${searchValue}?app_id=${appId}`,\n                {\n                    headers: {\n                        \"accept\": \"application/json\",\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\n                        \"X-Requested-With\": \"XMLHttpRequest\",\n                        \"Access-Control-Allow-Origin\": \"*\",\n                    },\n                }\n            );\n            const data = response.data;\n            console.log(\"Data returned from API: \", data);\n            searchResults.push(data);\n            setSearchResults(searchResults)\n            console.log('Array of Search Results ', searchResults);\n\n            setLoading(false);\n            // return data;\n        } catch (error) {\n            // If an error occurred we log it to the console\n            console.error(\"Request Failed: \", error);\n        }\n    }\n\n    return (\n        loading ?\n            <div>\n                <Skeleton animation=\"wave\" variant=\"text\"/>\n                <Skeleton animation=\"wave\" variant=\"rect\"/>\n            </div> :\n            showArtistResults ?\n                <div>\n                    <Grid container direction=\"row\" alignItems=\"flex-start\">\n                        <Grid item xs={12}>\n                            <Typography className={classes.text}>\n                                {searchResults.length} result(s) found for \"{props.searchTerm}\"\n                            </Typography>\n                        </Grid>\n                        {searchResults.map((record) => (\n                            <Grid item xs={4} onClick={(e) => handleClick(e, record)}>\n                                <ArtistDetails results={record}></ArtistDetails>\n                            </Grid>\n\n                        ))}\n                    </Grid>\n                </div> :\n\n                <div>\n\n\n                    <Grid container direction=\"row\" alignItems=\"flex-start\">\n                        <EventResults artist={selectedArtist}></EventResults>\n                    </Grid>\n                </div>\n    );\n}\n\n","import React, {useState, useEffect} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArtistDetails from \"./ArtistDetails\";\nimport ArtistEvents from \"./ArtistEvents.js\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Grid} from \"@material-ui/core\";\nimport SearchResults from \"./SearchResults.js\";\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: \"2px 4px\",\n        display: \"flex\",\n        alignItems: \"left\",\n        width: 800,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    focused: {\n        borderColor: \"#000000\"\n    },\n}));\n\nexport default function SearchBar() {\n\n    const classes = useStyles();\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [searchResults, setSearchResults] = useState(false);\n\n    function handleChange(e) {\n        e.preventDefault();\n        setSearchTerm(e.target.value);\n        setSearchResults(true);\n\n        console.log('onChange search term', searchTerm);\n    }\n\n    function search(e) {\n        e.preventDefault();\n        setSearchResults(true);\n        console.log('search results bool', searchResults);\n    }\n\n    return (\n        <Grid container direction=\"column\" alignItems=\"flex-start\">\n            <Grid item xs={12}>\n                <Paper component=\"form\" className={classes.root}>\n                    <InputBase\n                        className={classes.input}\n                        margin=\"dense\"\n                        placeholder=\"Search Artist Name\"\n                        type=\"text\"\n                        value={searchTerm}\n                        onChange={(e) => handleChange(e)}\n                        onSubmit={(e) => search(e)}\n                        inputProps={{'aria-label': 'search artist name'}}\n                    />\n                    <IconButton\n                        type=\"button\"\n                        className={classes.iconButton}\n                        onClick={(e) => search(e)}\n                        aria-label=\"search\"\n                    >\n                        <SearchIcon/>\n                    </IconButton>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                {searchResults ? <SearchResults searchTerm={searchTerm}/> : null}\n            </Grid>\n        </Grid>\n    );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar.js\";\nimport ArtistDetails from \"./components/ArtistDetails.js\";\nimport EventResults from \"./components/EventResults\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams\n} from \"react-router-dom\";\nimport {Image} from \"@material-ui/icons\";\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n        <div className=\"image\"/>\n      <SearchBar />\n        <Router>\n            <Switch>\n                {/* <Route path=\"/\" component={SearchBar} /> */}\n                <Route\n                    path=\"/results/:artist\"\n                    children={<Child />}\n                />\n            </Switch>\n        </Router>\n    </div>\n  );\n\n    function Child() {\n        // We can use the `useParams` hook here to access\n        // the dynamic pieces of the URL.\n        let {artist} = useParams();\n\n        return (\n            <div>\n                <EventResults results={artist}></EventResults>\n            </div>\n        );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {Image} from \"@material-ui/icons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}