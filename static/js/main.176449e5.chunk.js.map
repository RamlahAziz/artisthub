{"version":3,"sources":["components/SearchBar.js","components/ArtistDetails.js","components/SearchResults.js","components/ArtistEvents.js","components/EventResults.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","alignItems","width","paper","iconButton","padding","textField","margin","spacing","input","outlineColor","color","borderColor","grid","SearchBar","props","history","useHistory","classes","useState","searchTerm","setSearchTerm","search","e","preventDefault","push","Grid","container","direction","className","item","xs","FormControl","variant","Paper","elevation","OutlinedInput","focused","id","type","placeholder","value","onChange","target","handleChange","onKeyPress","key","handleKeyPress","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","aria-autocomplete","onMouseDown","event","edge","textAlign","avatar","backgroundColor","red","text","fontSize","ArtistDetails","console","log","results","Card","CardHeader","Avatar","src","image_url","title","name","subheader","Typography","noWrap","facebook_page_url","artistResultGrid","alignContent","flexFlow","SearchResults","searchResults","setSearchResults","React","loading","setLoading","baseUrl","appId","searchValue","a","Axios","get","response","data","length","hasOwnProperty","error","useEffect","refinedSearchTerm","includes","replace","searchArtists","then","Skeleton","animation","map","record","handleClick","media","height","paddingTop","table","borderBottom","header","fontFamily","fontWeight","subtext","ArtistEvents","months","CardContent","align","alvariant","gutterBottom","Divider","venue","country","city","string","date","Date","getDate","getMonth","getFullYear","dateFormat","datetime","eventResultGrid","EventResults","location","useLocation","state","artist","eventResults","setEventResults","artistName","getArtistEvents","flex","to","style","upcoming_event_count","App","flexDirection","justifyContent","alignSelf","DivContainer","landing","exact","path","children","Child","Child2","useParams","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.176449e5.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {Grid} from \"@material-ui/core\";\nimport FormControl from '@material-ui/core/FormControl';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useHistory } from \"react-router-dom\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexWrap: 'wrap',\n        alignItems: \"flex-start\",\n        width: 'fill',\n    },\n    paper:{\n        display: \"flex\",\n        flexWrap: 'wrap',\n        alignItems: \"left\",\n        width: 'fill',\n    },\n    iconButton: {\n        padding: 10,\n    },\n    textField: {\n        margin: theme.spacing(1),\n        width: 'fill',\n    },\n    //========================== how to get border color on focus to change??\n    input: {\n        outlineColor:'#000000',\n        color:'secondary',\n        borderColor: '#80bdff',\n        // '&$focused':{\n        //     borderColor: '#80bdff'\n        // }\n    },\n    grid: {\n        //paddingLeft: theme.spacing(12),\n    }\n\n}));\n\nexport default function SearchBar(props) {\n\n    let history = useHistory();\n\n    const classes = useStyles();\n    const [searchTerm, setSearchTerm] = useState(props.searchTerm);//props.artistName\n    // const [showResults, setShowResults] = useState();\n\n    function handleChange(e) {\n        // e.preventDefault();\n        let input = e.target.value;\n        setSearchTerm(input);\n        //setShowResults(true);\n\n    }\n\n    const handleKeyPress=(e)=> {\n        if (e.key === 'Enter') {\n           search(e);\n        }\n    }\n\n    const search = (e) => {\n        e.preventDefault();\n        // setShowResults(true);\n        history.push('/results/'+searchTerm);\n\n    }\n\n    const handleMouseDown = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <Grid container direction={\"column\"} className={classes.root}>\n            <Grid item xs={12} className={classes.grid}>\n                <FormControl className={classes.textField} variant=\"outlined\">\n                    <Paper className={classes.paper} elevation={2}>\n                        <OutlinedInput classes={{focused : classes.input}}\n                            id=\"search-artist-input\"\n                            type= 'text'\n                            placeholder = 'Search Artist Name'\n                            value={searchTerm}\n                            onChange={(e) => handleChange(e)}\n                                       onKeyPress={(e)=>handleKeyPress(e)}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"search icon\"\n                                        onClick={search}\n                                        //onMouseDown={}\n                                        aria-autocomplete={\"both\"}\n                                        onMouseDown={handleMouseDown}\n                                        edge=\"end\"\n                                    >\n                                        <SearchIcon />\n\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                    </Paper>\n                </FormControl>\n            </Grid>\n        </Grid>\n    );\n}\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {red} from \"@material-ui/core/colors\";\nimport {Typography} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 345,\n        margin: 10,\n        textAlign: \"left\",\n        padding: 0,\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n    text:{\n        //fontFamily: \"Roboto\",\n        //textAlign: \"left\",\n        fontSize: 12,\n        // \"7a7f80\"\n    },\n}));\n\n//import DialogForm from \"./EMRMakerByDocForm\";\n//<DialogForm patientMy={props.record} doctorMy={props.doctor}/>\n\nexport default function ArtistDetails(props) {\n\n    //rendered twice?\n    console.log(\"Artist Details\", props.results);\n    const classes = useStyles();\n    return (\n\n        <Card className={classes.root}>\n            <CardHeader\n                avatar={\n                    <Avatar aria-label=\"picture\" className={classes.avatar} src={props.results.image_url}>\n                        {/*{props.results.name?'':props.results.name.charAt(0)}*/}\n                    </Avatar>\n                }\n                title={props.results.name}\n                subheader={<Typography className={classes.text} color={\"textSecondary\"} noWrap={false}>{props.results.facebook_page_url}</Typography>}\n            />\n        </Card>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport {Grid} from \"@material-ui/core\";\nimport ArtistDetails from \"./ArtistDetails\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        margin: 10,\n        textAlign: \"left\",\n        padding: 10,\n        fontSize: 14,\n    },\n    artistResultGrid: {\n        alignContent: \"flex-start\",\n        alignItems: \"flex-start\",\n        flexFlow: \"row wrap\",\n    },\n    root: {\n        display: \"flex\",\n        flexWrap: 'wrap',\n        alignItems: \"left\",\n        width: 'fill',\n    }\n\n}));\n\nexport default function SearchResults(props) {\n\n    const classes = useStyles();\n    let history = useHistory();\n\n    // console.log('searchterm',props);\n\n    const [searchResults, setSearchResults] = useState([]);\n    const [loading, setLoading] = React.useState(true);\n    const baseUrl = `https://rest.bandsintown.com`;\n    const appId = \"b2d0af8ea8bfb7288d2701b2d06e9eae\";\n\n\n\n    useEffect(() => {\n        //data fetching whenever search term changes\n\n        let refinedSearchTerm = props.searchTerm;\n        if (refinedSearchTerm.includes(\" \")) {\n            refinedSearchTerm = refinedSearchTerm.replace(/\\s/g, \"\");\n        }\n        if (!refinedSearchTerm || refinedSearchTerm.length === 0) {\n            //ask user for proper input\n            searchResults.length=0;\n            setSearchResults([]);\n            // console.log('empty input')\n        } else {\n            searchResults.length=0;\n            setSearchResults([]);\n            searchArtists(refinedSearchTerm).then();\n        }\n\n    }, [props.searchTerm]);\n\n    function handleClick(e, record) {\n        e.preventDefault();\n        // console.log('onClick called', record);\n\n        history.push(\"/results/\"+ props.searchTerm+\"/events\",record);\n    };\n\n    async function searchArtists(searchValue) {\n        try {\n            const response = await Axios.get(\n                `${baseUrl}/artists/${searchValue}?app_id=${appId}`,\n            );\n            const data = response.data;\n            // console.log(\"Data returned from API: \", data);\n            if (!data || data.length === 0 || data.hasOwnProperty(\"error\")) {\n                //json object not valid\n            } else {\n                searchResults.push(data);\n                setSearchResults(searchResults)\n            }\n\n            // console.log('LATE Array of Search Results ', searchResults);\n\n            setLoading(false);\n            // return data;\n        } catch (error) {\n            // If an error occurred we log it to the console\n            console.error(\"Request Failed: \", error);\n        }\n    }\n\n    return (\n        loading ?\n            <div className={classes.root}>\n                <Skeleton animation=\"wave\" variant=\"text\"/>\n                <Skeleton animation=\"wave\" variant=\"rect\"/>\n            </div> :\n                <div>\n\n                    <Grid className={classes.artistResultGrid} container direction=\"row\" alignItems=\"flex-start\">\n                        <Grid className={classes.artistResultGrid} item xs={12}>\n                            <Typography color={\"textSecondary\"} className={classes.text}>\n                                {/*make this depend on input*/}\n                                {searchResults.length} result(s) found for \"{props.searchTerm}\"\n                            </Typography>\n                        </Grid>\n                        {searchResults.map((record) => (\n                            <Grid item key={record.name} xs onClick={(e) => handleClick(e, record)}>\n                                <ArtistDetails key={record.id} results={record}/>\n                            </Grid>\n\n                        ))}\n                    </Grid>\n                </div>\n\n    );\n}\n\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Grid} from \"@material-ui/core\";\n\nimport \"fontsource-roboto\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300,\n        margin:5,\n    },\n    media: {\n        height: 0,\n        paddingTop: \"56.25%\", // 16:9\n    },\n    table: {\n        borderBottom: \"none\",\n    },\n    header: {\n        fontFamily: \"Roboto\",\n        textAlign: \"left\",\n        fontSize: 13,\n    },\n    text: {\n        fontFamily: \"Roboto\",\n        textAlign: \"left\",\n        fontSize: 13,\n        fontWeight: \"bold\",\n        paddingTop: 8,\n    },\n    subtext: {\n        fontFamily: \"Roboto\",\n        textAlign: \"left\",\n        fontSize: 12,\n    },\n}));\n\nexport default function ArtistEvents(props) {\n    console.log('Artist Event Details: ', props);\n    const classes = useStyles();\n\n    const months = [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n    ]\n\n    function dateFormat(string) {\n        //2020-10-07T19:00:00\n        const date = new Date(string);\n        return date.getDate() + \" \" + months[date.getMonth()] + \", \" + date.getFullYear();\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography className={classes.header} align={\"left\"} alvariant=\"overline\" gutterBottom>\n                    EVENT DETAILS\n                </Typography>\n                <Divider variant=\"middle\"/>\n                <Grid container direction=\"column\" alignItems=\"flex-start\">\n                    <Grid container direction=\"row\">\n                        <Grid item xs={6}>\n                            <Typography className={classes.text}>Country</Typography>\n                            <Typography noWrap={true} className={classes.subtext}\n                                        color={\"textSecondary\"}>{props.event.venue.country}</Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography className={classes.text}>City</Typography>\n                            <Typography noWrap={true} className={classes.subtext}\n                                        color={\"textSecondary\"}>{props.event.venue.city}</Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid></Grid>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={6}>\n                            <Typography  className={classes.text}>Venue</Typography>\n                            <Typography noWrap={false} className={classes.subtext}\n                                        color={\"textSecondary\"}>{props.event.venue.name}</Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography className={classes.text}>Date</Typography>\n                            <Typography noWrap={true} className={classes.subtext}\n                                        color={\"textSecondary\"}>{dateFormat(props.event.datetime)}</Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n}\n","import React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Grid} from \"@material-ui/core\";\nimport ArrowBackIosOutlinedIcon from '@material-ui/icons/ArrowBackIosOutlined';\nimport ArtistDetails from \"./ArtistDetails\";\nimport Axios from \"axios\";\nimport ArtistEvents from \"./ArtistEvents\";\nimport { Link} from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        margin: 10,\n        padding: 10,\n        fontSize: 15,\n    },\n    eventResultGrid: {\n        alignContent: \"flex-start\",\n        alignItems: \"stretch\",\n        flexFlow: \"row wrap\",\n        height: \"100%\",\n    },\n\n}));\n\nexport default function EventResults(props) {\n\n    const location = useLocation ();\n    console.log('event results location', location.state);\n    console.log('event results artist', props.artist);\n    const classes = useStyles();\n\n    console.log('Event Artist Name', location.state.name);\n\n    const [eventResults, setEventResults] = useState([]);\n    //using a proxy to avoid cors errors\n    const baseUrl = `https://rest.bandsintown.com`;\n    const appId = \"b2d0af8ea8bfb7288d2701b2d06e9eae\";\n\n\n    useEffect(() => {\n        //data fetching whenever searchterm changes\n        getArtistEvents(location.state.name);\n\n    }, [location.state]);\n\n\n    async function getArtistEvents(artistName) {\n        try {\n            const response = await Axios.get(\n                `${baseUrl}/artists/${artistName}/events?app_id=${appId}&date=upcoming`,\n            );\n            const data = response.data;\n            console.log(\"Data returned from Events API: \", data);\n            // eventResults.push(data);\n            setEventResults(data)\n            console.log('Array of Search Results ', eventResults);\n\n            // return data;\n        } catch (error) {\n            // If an error occurred we log it to the console\n            console.error(\"Request Failed: \", error);\n        }\n    }\n\n    return (\n        <div>\n            <Grid container spacing={1} alignContent=\"flex-start\" alignItems=\"flex-start\" className={classes.eventResultGrid} direction=\"column\" alignItems=\"flex-start\">\n\n                <Grid item xs={2} flex={\"none\"} >\n                    <Typography className={classes.text}>\n                        <Link to={`/results/${location.state.name}`}>\n                            <ArrowBackIosOutlinedIcon style={{fontSize: 10, margin: 0}}></ArrowBackIosOutlinedIcon>\n                            Back to Results</Link>\n                    </Typography>\n                </Grid>\n\n\n                <Grid item xs={12} >\n                    <ArtistDetails results={location.state}></ArtistDetails>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Typography className={classes.text}  color={\"textSecondary\"} align={\"left\"}>\n                        {location.state.upcoming_event_count} upcoming event(s)\n                    </Typography>\n                </Grid>\n\n            </Grid>\n\n            <Grid container className={classes.eventResultGrid} direction=\"row\">\n                {eventResults.map((record) => (\n                    <Grid item xs key={record.id}>\n                        <ArtistEvents event={record}></ArtistEvents>\n                    </Grid>\n\n                ))}\n            </Grid>\n\n        </div>\n    );\n}\n\n","import React from \"react\";\nimport SearchBar from \"./components/SearchBar.js\";\nimport SearchResults from \"./components/SearchResults\";\nimport EventResults from \"./components/EventResults\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    //Link,\n    useParams\n} from \"react-router-dom\";\nimport {Grid} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    App: {\n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n        padding: theme.spacing(4),\n        // paddingLeft: \"auto\",\n        // paddingRight: \"auto\",\n        // overflow: \"hidden\",\n        backgroundColor: \"#D8D3D0\",\n    },\n    SearchBar: {\n        // margin: \"0 50%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignSelf: \"center\",\n        width:\"100%\",\n    },\n    DivContainer: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignContent:\"center\",\n        flexDirection: \"column\",\n        padding: theme.spacing(2),\n    },\n    landing: {\n        backgroundColor: \"#D8D3D0\",\n        padding: theme.spacing(12),\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignContent:\"center\",\n        flexDirection: \"column\",\n    }\n\n}));\n\nfunction App() {\n\nconst classes = useStyles();\n    return (\n        <div className={classes.App}>\n\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <div className={classes.landing}>\n                            <div className={classes.DivContainer}>\n                                <Typography variant={\"h4\"}>Enter your favourite artist's name</Typography>\n                            </div>\n                            <div className={classes.DivContainer}>\n                                <SearchBar className={classes.SearchBar} searchTerm={\"\"}\n                                />\n                            </div>\n                        </div>\n\n\n                        {/*<SearchBar searchTerm={\"\"}/>*/}\n                    </Route>\n                    <Route exact path=\"/artisthub\">\n                        <Redirect to=\"/\"/>\n                    </Route>\n                    <Route\n                        exact\n                        path=\"/results/:artist\"\n                        children={<Child/>}\n                    />\n                    <Route\n                        exact\n                        path={\"/results/:artist/events\"}\n                        children={<Child2/>}/>\n\n                </Switch>\n            </Router>\n        </div>\n    );\n\n    function Child() {\n        // We can use the `useParams` hook here to access\n        // the dynamic pieces of the URL.\n        let {artist} = useParams();\n        return (\n\n            <Grid container direction={\"column\"}>\n                <Grid item xs={12}>\n                    <SearchBar searchTerm={artist}/>\n\n                </Grid>\n                <Grid item xs={12}>\n                    <SearchResults searchTerm={artist}/>\n\n                </Grid>\n            </Grid>\n\n\n        );\n    }\n\n    function Child2() {\n        let artist = useParams();\n        return (\n                <Grid container direction=\"row\" alignItems=\"flex-start\">\n                    <EventResults artist={artist}/>\n                </Grid>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}